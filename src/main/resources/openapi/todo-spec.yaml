openapi: 3.0.1
info:
  title: Task Service API
  description: This is an api-spec for `todo` service.
  termsOfService: http://swagger.io/terms/
  contact:
    name: Mothusi Molorane
    email: molorane.mothusi@gmail.com
  license:
    name: Apache 2.0
    url: http://springdoc.org
  version: 0.0.1
servers:
  - url: http://192.168.0.157:2023/todo
    description: Generated server url
tags:
  - name: Dashboard
    description: Api generates data for dashboard
  - name: Task
    description: Api operations for the task
  - name: FileUpload
    description: Api operations for uploading files
paths:
  /v1/tasks/{userId}:
    put:
      tags:
        - Task
      summary: Update Task
      description: Update a Task
      operationId: update-task
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskDTO'
        required: true
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
    post:
      tags:
        - Task
      summary: Add a task
      description: Add a task
      operationId: add-task
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDTO'
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskDTO'
        '204':
          description: No Content
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDTO'
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskDTO'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
        '405':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDTO'
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskDTO'
  /v1/tasks/restore-deleted-task/:
    put:
      tags:
        - Task
      summary: Restore a deleted Task
      description: Restore a deleted Task
      operationId: restore-soft-deleted-task
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
            default: 1
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/DefaultResponse'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/{userId}/user:
    get:
      tags:
        - Task
      summary: Get Tasks in pages
      description: Get Tasks
      operationId: find-tasks-by-user-id
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
        - name: pageable
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageTaskDTO'
            '*/*':
              schema:
                $ref: '#/components/schemas/PageTaskDTO'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/{userId}/task-type/{taskType}:
    get:
      tags:
        - Task
      summary: Find tasks by userId and task-type
      description: Find tasks by userId
      operationId: find-tasks-by-user-id-and-task-type
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
        - name: taskType
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/TaskType'
        - name: pageable
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageTaskDTO'
            '*/*':
              schema:
                $ref: '#/components/schemas/PageTaskDTO'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/{userId}/is-completed/{isCompleted}:
    get:
      tags:
        - Task
      summary: Find tasks by userId and task-type
      description: Find tasks by userId
      operationId: find-tasks-by-user-id-and-is-completed
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
        - name: isCompleted
          in: path
          required: true
          schema:
            type: boolean
            default: false
        - name: pageable
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageTaskDTO'
            '*/*':
              schema:
                $ref: '#/components/schemas/PageTaskDTO'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/{taskId}:
    get:
      tags:
        - Task
      summary: Get Task By Id
      description: Get Task
      operationId: find-task-by-id
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 1
      responses:
        '200':
          description: Get Task By Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDTO'
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskDTO'
        '204':
          description: No Content
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/{taskId}/user/{userId}:
    get:
      tags:
        - Task
      summary: Get Task By Id and UserId
      description: Get Task
      operationId: find-task-by-id-and-user-id
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 1
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 1
      responses:
        '200':
          description: Get Task By Id and UserId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDTO'
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskDTO'
        '204':
          description: No Content
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/{description}/description:
    get:
      tags:
        - Task
      summary: Get a Task By title
      description: Get a Task
      operationId: find-all-tasks-by-description-containing
      parameters:
        - name: description
          in: path
          required: true
          schema:
            type: string
        - name: pageable
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageTaskDTO'
            '*/*':
              schema:
                $ref: '#/components/schemas/PageTaskDTO'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/dashboard/deleted-task/{userId}:
    get:
      tags:
        - Dashboard
      summary: Count all deleted tasks
      description: Count all deleted tasks
      operationId: count-deleted-tasks-by-user-id
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int64
            '*/*':
              schema:
                type: integer
                format: int64
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/dashboard/task-group-count/{userId}:
    get:
      tags:
        - Dashboard
      summary: task group count by user id
      description: task group count by user id
      operationId: task-group-count-by-user-id
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
        - name: taskType
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/TaskType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskGroupCount'
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskGroupCount'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/dashboard/task-count-today/{userId}:
    get:
      tags:
        - Dashboard
      summary: task count today by user id
      description: task count today by user id
      operationId: task-count-today-by-user-id
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
        - name: taskType
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/TaskType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskCountToday'
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskCountToday'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/:
    delete:
      tags:
        - Task
      summary: Delete a Task By Id
      description: Delete a Task
      operationId: delete-task-by-id-and-user-id
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
            default: 1
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/DefaultResponse'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/{userId}/today:
    get:
      tags:
        - Task
      summary: Find all tasks for today by userId
      description: Find all tasks for today by userId
      operationId: find-all-tasks-for-today-by-user-id
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
        - name: pageable
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageTaskDTO'
            '*/*':
              schema:
                $ref: '#/components/schemas/PageTaskDTO'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/{userId}/search:
    post:
      tags:
        - Task
      summary: Search tasks
      description: Search tasks
      operationId: search-tasks
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
        - name: pageable
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Pageable'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskSearchDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageTaskDTO'
            '*/*':
              schema:
                $ref: '#/components/schemas/PageTaskDTO'
        '204':
          description: No Content
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDTO'
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskDTO'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
        '405':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDTO'
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskDTO'
  /v1/tasks/{userId}/upload-profile-image:
    post:
      tags:
        - FileUpload
      summary: uploads an image
      operationId: upload-profile-image
      parameters:
        - name: userId
          in: path
          description: UserId of a user to update
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profileImage:
                  type: string
                  format: binary
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
  /v1/tasks/{userId}/load-profile-image:
    get:
      tags:
        - FileUpload
      operationId: load-profile-image
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: string
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    TaskType:
      type: string
      enum:
        - PRAY
        - WORKOUT
        - FLUTTER
        - SPRING
        - STUDY
        - FOOD
        - ENTERTAINMENT
    TaskDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        taskType:
          $ref: '#/components/schemas/TaskType'
        isCompleted:
          type: boolean
          default: false
        dueDate:
          type: string
          format: date
          example: '2023-01-01'
        description:
          type: string
        createdDate:
          type: string
          format: date-time
          example: '2023-01-01T17:32:28Z'
        isDeleted:
          type: boolean
          default: false
    DefaultResponse:
      type: object
      properties:
        message:
          type: string
        description:
          type: string
        date:
          type: string
          format: date-time
    PageTaskDTO:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
          default: 0
        totalElements:
          type: integer
          format: int64
          default: 0
        first:
          type: boolean
          default: true
        last:
          type: boolean
          default: false
        size:
          type: integer
          format: int32
          default: 20
        content:
          type: array
          items:
            $ref: '#/components/schemas/TaskDTO'
        number:
          type: integer
          format: int32
          default: 0
        numberOfElements:
          type: integer
          format: int32
          default: 0
        empty:
          type: boolean
          default: true
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
          default: 0
        sort:
          $ref: '#/components/schemas/SortObject'
        paged:
          type: boolean
          default: true
        unpaged:
          type: boolean
          default: false
        pageNumber:
          type: integer
          format: int32
          default: 0
        pageSize:
          type: integer
          format: int32
          default: 20
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
          default: false
        unsorted:
          type: boolean
          default: false
        sorted:
          type: boolean
          default: true
    TaskSearchDTO:
      type: object
      properties:
        taskType:
          $ref: '#/components/schemas/TaskType'
        isCompleted:
          type: boolean
          default: false
        startDate:
          type: string
          format: date
          example: '2023-01-01'
        endDate:
          type: string
          format: date
          example: '2023-01-01'
        description:
          type: string
        isDeleted:
          type: boolean
          default: false
    TaskGroupCount:
      type: object
      properties:
        taskType:
          $ref: '#/components/schemas/TaskType'
        isCompleted:
          type: boolean
          default: false
        totalTasks:
          type: integer
          format: int32
          default: 0
    TaskCountToday:
      type: object
      properties:
        isCompleted:
          type: boolean
          default: false
        totalTasks:
          type: integer
          format: int32
          default: 0
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
          default: 20
        sort:
          type: array
          default:
            - "dueDate"
            - "DESC"
          items:
            type: string