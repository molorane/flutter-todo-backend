openapi: 3.0.1
info:
  title: Todo Service API
  description: This is an api-spec for `todo` service.
  termsOfService: http://swagger.io/terms/
  contact:
    name: Mothusi Molorane
    email: molorane.mothusi@gmail.com
  license:
    name: Apache 2.0
    url: http://springdoc.org
  version: 0.0.1
servers:
  - url: http://localhost:2023/todo
    description: Generated server url
tags:
  - name: Dashboard
    description: Api generates data for dashboard
  - name: Todo
    description: Api operations for the todo
paths:
  /v1/tasks/{userId}:
    put:
      tags:
        - Todo
      summary: Update Todo
      description: Update a Todo
      operationId: update-todo
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoDTO'
        required: true
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
    post:
      tags:
        - Todo
      summary: Add a todo
      description: Add a todo
      operationId: add-todo
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoDTO'
            '*/*':
              schema:
                $ref: '#/components/schemas/TodoDTO'
        '204':
          description: No Content
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoDTO'
            '*/*':
              schema:
                $ref: '#/components/schemas/TodoDTO'
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
        '405':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoDTO'
            '*/*':
              schema:
                $ref: '#/components/schemas/TodoDTO'
  /v1/tasks/restore-deleted-todo/:
    put:
      tags:
        - Todo
      summary: Restore a deleted Todo
      description: Restore a deleted Todo
      operationId: restore-soft-deleted-todo
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
            default: 1
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/DefaultResponse'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/{userId}/uploadProfile:
    post:
      tags:
        - Todo
      summary: uploads an image
      operationId: upload-file
      parameters:
        - name: userId
          in: path
          description: UserId of a user to update
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profileImage:
                  type: string
                  format: binary
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
  /v1/tasks:
    get:
      tags:
        - Todo
      summary: Get Todos in pages
      description: Get Todos
      operationId: find-todos
      parameters:
        - name: pageNo
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
            default: name
        - name: dir
          in: query
          required: false
          schema:
            type: string
            default: asc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageTodoDTO'
            '*/*':
              schema:
                $ref: '#/components/schemas/PageTodoDTO'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/{userId}/user:
    get:
      tags:
        - Todo
      summary: Find todos by userId
      description: Find todos by userId
      operationId: load-top-entities-by-user-id
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoDTO'
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoDTO'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/{userId}/todo-type:
    get:
      tags:
        - Todo
      summary: Find todos by user id and todo-type
      description: Find todos by user id and todo-type
      operationId: find-todos-by-user-id-and-todo-type
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
        - name: todoType
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/TodoType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoDTO'
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoDTO'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/{todoId}:
    get:
      tags:
        - Todo
      summary: Get Todo By Id
      description: Get Todo
      operationId: find-todo-by-id
      parameters:
        - name: todoId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 1
      responses:
        '200':
          description: Get Todo By Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoDTO'
            '*/*':
              schema:
                $ref: '#/components/schemas/TodoDTO'
        '204':
          description: No Content
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/{todoId}/user/{userId}:
    get:
      tags:
        - Todo
      summary: Get Todo By Id and UserId
      description: Get Todo
      operationId: find-todo-by-id-and-user-id
      parameters:
        - name: todoId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 1
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 1
      responses:
        '200':
          description: Get Todo By Id and UserId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoDTO'
            '*/*':
              schema:
                $ref: '#/components/schemas/TodoDTO'
        '204':
          description: No Content
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/{description}/description:
    get:
      tags:
        - Todo
      summary: Get a Todo By title
      description: Get a Todo
      operationId: find-all-todos-by-description-containing
      parameters:
        - name: description
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoDTO'
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoDTO'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/dashboard/deleted-todo/{userId}:
    get:
      tags:
        - Dashboard
      summary: Count all deleted todos
      description: Count all deleted todos
      operationId: count-deleted-todos-by-user-id
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int64
            '*/*':
              schema:
                type: integer
                format: int64
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/dashboard/todo-group-count/{userId}:
    get:
      tags:
        - Dashboard
      summary: todo group count by user id
      description: todo group count by user id
      operationId: todo-group-count-by-user-id
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoGroupCount'
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoGroupCount'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/dashboard/todo-count-today/{userId}:
    get:
      tags:
        - Dashboard
      summary: todo count today by user id
      description: todo count today by user id
      operationId: todo-count-today-by-user-id
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoCountToday'
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoCountToday'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/:
    delete:
      tags:
        - Todo
      summary: Delete a Todo By Id
      description: Delete a Todo
      operationId: delete-todo-by-id-and-user-id
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
            default: 1
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/DefaultResponse'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/{userId}/today:
    get:
      tags:
        - Todo
      summary: Find all todos for today by userId
      description: Find all todos for today by userId
      operationId: find-all-todos-for-today-by-user-id
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoDTO'
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoDTO'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
  /v1/tasks/{userId}/search:
    post:
      tags:
        - Todo
      summary: Search todos
      description: Search todos
      operationId: search-todos
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            default: 2014098616
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoSearchDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoDTO'
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoDTO'
        '204':
          description: No Content
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoDTO'
            '*/*':
              schema:
                $ref: '#/components/schemas/TodoDTO'
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                type: string
            '*/*':
              schema:
                type: string
        '405':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoDTO'
            '*/*':
              schema:
                $ref: '#/components/schemas/TodoDTO'
components:
  schemas:
    TodoType:
      type: string
      enum:
        - PRAYER
        - GYM
        - PREACH
        - FLUTTER
        - SPRING
        - STUDY
        - FOOD
        - ENTERTAINMENT
      default: STUDY
    TodoDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        todoType:
          $ref: '#/components/schemas/TodoType'
        isCompleted:
          type: boolean
          default: false
        dueDate:
          type: string
          format: date
          example: '2023-01-01'
        description:
          type: string
        createdDate:
          type: string
          format: date-time
          example: '2023-01-01T17:32:28Z'
        isDeleted:
          type: boolean
          default: false
    DefaultResponse:
      type: object
      properties:
        message:
          type: string
        description:
          type: string
        date:
          type: string
          format: date-time
    PageTodoDTO:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/TodoDTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        paged:
          type: boolean
        unpaged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        unsorted:
          type: boolean
        sorted:
          type: boolean
    TodoSearchDTO:
      type: object
      properties:
        todoType:
          $ref: '#/components/schemas/TodoType'
        isCompleted:
          type: boolean
          default: false
        startDate:
          type: string
          format: date
          example: '2023-01-01'
        endDate:
          type: string
          format: date
          example: '2023-01-01'
        description:
          type: string
        isDeleted:
          type: boolean
          default: false
    TodoGroupCount:
      type: object
      properties:
        todoType:
          $ref: '#/components/schemas/TodoType'
        isCompleted:
          type: boolean
          default: false
        totalTodos:
          type: integer
          format: int32
          default: 0
    TodoCountToday:
      type: object
      properties:
        isCompleted:
          type: boolean
          default: false
        totalTodos:
          type: integer
          format: int32
          default: 0